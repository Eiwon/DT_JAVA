
DESC EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID = 50;

SELECT MIN (SALARY) FROM EMPLOYEES;

SELECT MAX (SALARY) FROM EMPLOYEES;

SELECT AVG (SALARY) FROM employees;

// -월급킹의 정보
SELECT * FROM EMPLOYEES
WHERE SALARY = (
    SELECT MAX (SALARY) FROM EMPLOYEES
);

-- 월급이 최대 또는 최소인 사람
SELECT * FROM EMPLOYEES
WHERE SALARY = (
    SELECT MIN(SALARY) FROM EMPLOYEES
) OR SALARY = (
    SELECT MAX(SALARY) FROM employees
);

SELECT DISTINCT DEPARTMENT_ID FROM EMPLOYEES;
-- DISTINCT : 중복을 제거한 데이터

SELECT * FROM employees
WHERE department_ID IN (10, 20, 30);

-- 연습1. EMPLOYEES 테이블에서
-- SALARY가 2000 이상 3000 이하인 직원들의 모든 정보
SELECT * FROM EMPLOYEES
WHERE SALARY >= 2000 AND SALARY <= 3000;
-- == SELECT * FROM EMPLOYEES
-- WHERE SALARY BETWEEN 2000 AND 3000;

-- 연습2. MANAGER_ID가 100인 직원들의 모든 정보
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID = 100;

-- 연습3. 2004년 이전에 입사한 직원들의 정보
SELECT * FROM EMPLOYEES
WHERE HIRE_DATE < '2004-01-01';

-- 연습4. JOB_ID가 IT_PROG 이거나 HR_REP인 직원들의 모든 정보
SELECT * FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'HR_REP';

-- 연습5. Susan Mavris의 MANAGER_ID를 검색
SELECT MANAGER_ID FROM EMPLOYEES
WHERE FIRST_NAME = 'Susan' AND LAST_NAME = 'Mavris';

-- 연습6. Susan Mavris의 매니저와 같은 매니저를 갖는 직원들의 모든 정보
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID = (
SELECT MANAGER_ID FROM EMPLOYEES
WHERE FIRST_NAME = 'Susan' AND LAST_NAME = 'Mavris'
);

-- 연습7. 평균 월급(SALARY)보다 많이 받는 직원들의 모든 정보
SELECT * FROM EMPLOYEES
WHERE SALARY > (
SELECT AVG(SALARY) FROM EMPLOYEES
);
